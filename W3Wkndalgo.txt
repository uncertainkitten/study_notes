What is the time complexity of Radix Sort? What are the steps for this algorithm?
Time complexity of Radix sort is technically O(n)
Step 1 - find out your max digits
Step 2 - iterate over your array and do counting sorts on each element by digit, from least sig digit to most sig digit
Step 3 - keep doing the thing until you've reached max digits

What is an ideal use-case for Radix Sort?
And ideal use case for Radix sort is when you are sorting a known range of elements that is too big for counting sort to be viable, but smaller
than n^2 elements


Steps for Radix sort:
1. Do the following for each digit where i varies from least significant digit to most significant digit
a. sort input array using counting sort according to the i'th digit
Say you have [170, 45, 75, 90, 802, 24, 2, 66]
Sort your ones place first, get:
[170, 90, 802, 2, 24, 45, 75, 66]
Then sort by tens place:
[802, 2, 24, 45, 66, 170, 75, 90]
Sort by hundreds:
[2, 24, 45, 66, 75, 90, 170, 802]

Impletmenting Radix sort:

edit
play_arrow

brightness_4
# Python program for implementation of Radix Sort 
  
# A function to do counting sort of arr[] according to 
# the digit represented by exp. 
def countingSort(arr, exp1): 
  
    n = len(arr) 
  
    # The output array elements that will have sorted arr 
    output = [0] * (n) 
  
    # initialize count array as 0 
    count = [0] * (10) 
  
    # Store count of occurrences in count[] 
    for i in range(0, n): 
        index = (arr[i]/exp1) 
        count[ (index)%10 ] += 1
  
    # Change count[i] so that count[i] now contains actual 
    #  position of this digit in output array 
    for i in range(1,10): 
        count[i] += count[i-1] 
  
    # Build the output array 
    i = n-1
    while i>=0: 
        index = (arr[i]/exp1) 
        output[ count[ (index)%10 ] - 1] = arr[i] 
        count[ (index)%10 ] -= 1
        i -= 1
  
    # Copying the output array to arr[], 
    # so that arr now contains sorted numbers 
    i = 0
    for i in range(0,len(arr)): 
        arr[i] = output[i] 
  
# Method to do Radix Sort 
def radixSort(arr): 
  
    # Find the maximum number to know number of digits 
    max1 = max(arr) 
  
    # Do counting sort for every digit. Note that instead 
    # of passing digit number, exp is passed. exp is 10^i 
    # where i is current digit number 
    exp = 1
    while max1/exp > 0: 
        countingSort(arr,exp) 
        exp *= 10
  
# Driver code to test above 
arr = [ 170, 45, 75, 90, 802, 24, 2, 66] 
radixSort(arr) 
  
for i in range(len(arr)): 
    print(arr[i]), 
  
# This code is contributed by Mohit Kumra